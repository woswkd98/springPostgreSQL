  join= () => {
    Axios.put("/users"
    ,{userEmail :"asaerzyaerydtg", userPassword : "ratg", userName : "aet"}
    ).then(a=> {
      console.log(a);
    })
  }

  login= () => {
    Axios.get("/users/:id/:password" ,
    {params : {id : "asetg", password:"ewtgwet"} }
    ).then(a=> {
      console.log(a);
    })
  }
  logout = () => {
 
    Axios.head("/users"
    ).then(a=> {
      console.log(a);
    })
  }

  verify =() => {
    Axios.head("/token"
    ).then(a=> {
      console.log(a);
    })
  }

  delete = () => {
    Axios.delete("/users"
    ).then(a=> {
      console.log(a);
    })
  }
  getAll = () => {
    Axios.get("/users"
    ).then(a=> {
      console.log(a);
    })
  }
  findByPk = () => {
    Axios.get("/users/:pk",{params : {pk : 1}}
    ).then(a=> {
      console.log(a);
    })

  }

  findByUserId = () => {
    Axios.get("/users/:userId",{params : {userId : 1}}
    ).then(a=> {
      console.log(a);
    })

  }

  setUserState = () => {
    Axios.get("/users/:userState",{params : {userState : 1}}
    ).then(a=> {
      console.log(a);
    })

  }






// 요청부분
  insert= () => {
    Axios.put("/requests"
    ,{userId : 1, context :"asaerzyaerydtg", category : "ratg", deadline : new Date().getTime(), hopeDate : "2017-02-02"
    , tags : ["awet","attwet"]}

    ).then(a=> {
      console.log(a);
    })
  }
  list= () => {
    Axios.get("/requests").then(
      a=>console.log(a))};
  keywordCategory= () => {
    Axios.get("/requests/:category",{
    params: {
      category: "cccc"
    }}
    ).then(a=> {
      // deadline은 longtype으로 줄거임
      console.log( a)
  
    })
  }
  listRequestKeywordTag = () => {
    Axios.get("/requests/:tag" ,{
      params: {
      tag: "cccc"
    }}
    ).then(a=> {
      console.log(a);
    })
  }

  findByRequestId = () => {
    Axios.get("/requests/:requestId" ,{
      params: {
      requestId: "cccc"
    }}
    ).then(a=> {
      console.log(a);
    })
  }

  //  요청을 만들었다가 삭제할때 쓰세요 
  reqDel = () => {
    Axios.delete("/requests/:requestId" ,{
      params: {
        requestId: 37
    }}
    ).then(a=> {
      console.log(a);
    }) 
  }
  //
  pageing = () => {
    Axios.get("/requests/:start/:size" , {
      params: {
        start: 0,
        size : 3,
    }}
    ).then(a=> {
      console.log(a);
    }) 
  }
  
  // update seller 

  updateSeller = () => {
    Axios.put("/sellers" ,{ 
       portfolio : "qawet",
       imageLink : "qwet",
       imageCount :1,
       userId :1,
    }
     
    ).then(a=> {
      console.log(a);
    }) 
  }
  
  // 이메일 보내기
  email = () => {
    Axios.get("/email/:email" ,{ 
      params: { email : "woswkd98@naver.com"}
    }).then(a=> {
      console.log(a);
    }) 
  }
  // 이메일 검증 
  emailVerify = () => {
    Axios.get("/email/:authId" ,{ 
      params: { authId : "66119"}
    }).then(a => {
      console.log(a);
    });
  }
  // 패스워드 변경
  updateUserPassword = () => {
    Axios.get("/email/:userId/:newPassword" ,{ 
      params: { userId : "8", newPassword : "tesaetg"}
    }).then(a => {
      console.log(a);
    });

  }

  // 입찰 부분만 추가 예정
 
 
 

